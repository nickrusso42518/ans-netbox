---
- name: "Build AWS infrastructure for PAN NGFW"
  hosts: "localhost"
  connection: "local"
  vars_files:
    - "vault.yml"
  tasks:
    # AWS collection documentation:
    # https://github.com/ansible-collections/amazon.aws
    # https://github.com/ansible-collections/community.aws
    - name: "Search for Palo Alto NGFW images"
      amazon.aws.ec2_ami_info:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        image_id: "ami-04d797af2d3326de3"  # PA-VM 9.1.6
        # filters: name=PA-VM-AWS*
      register: pan
    - debug: var=pan

    - name: "Create Management security group"
      amazon.aws.ec2_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        name: "SG_PAN_Mgmt"
        description: "Allow SSH and HTTPS"  # required!
        vpc_id: "vpc-7d5a7b1b"  # Ansible
        region: "us-east-1"
        rules:
          - rule_desc: "SSH"
            proto: "tcp"
            from_port: 22
            to_port: 22
            cidr_ip: "0.0.0.0/0"
          - rule_desc: "HTTPS"
            proto: "tcp"
            from_port: 443
            to_port: 443
            cidr_ip: "0.0.0.0/0"
      register: pan
    - debug: var=pan

    - name: "Create VPN underlay security group"
      amazon.aws.ec2_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        name: "SG_PAN_VPN"
        description: "Allow IKE and IPsec NAT-T"  # required!
        vpc_id: "vpc-7d5a7b1b"  # Ansible
        region: "us-east-1"
        rules:
          - rule_desc: "IKE"
            proto: "udp"
            from_port: 500
            to_port: 500
            cidr_ip: "0.0.0.0/0"
          - rule_desc: "IPSEC NAT-T"
            proto: "udp"
            from_port: 4500
            to_port: 4500
            cidr_ip: "0.0.0.0/0"
      register: pan
    - debug: var=pan

    - name: "Create new ENIs"
      amazon.aws.ec2_eni:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        name: "{{ item.name }}"
        subnet_id: "{{ item.subnet_id }}"
        private_ip_address: "{{ item.private_ip_address }}"
        security_groups: "{{ item.security_groups }}"
      loop:
        - name: "ENI_PAN_Mgmt"
          subnet_id: "subnet-3045491d"  # existing VPC public subnet
          private_ip_address: "10.125.0.77"
          security_groups: ["SG_PAN_Mgmt"]
        - name: "ENI_PAN_VPN"
          subnet_id: "subnet-3045491d"  # existing VPC public subnet
          private_ip_address: "10.125.0.78"
          security_groups: ["SG_PAN_VPN"]
        - name: "ENI_PAN_Servers"
          subnet_id: "subnet-a645498b"  # existing VPC private subnet
          private_ip_address: "10.125.1.78"
          security_groups: ["SG_PAN_Mgmt"]  # TODO
      loop_control:
        label: "{{ item.name }}: {{ item.private_ip_address }}"
      register: pan
    - debug: var=pan

    - name: "Extract ENI IDs from results"
      set_fact:
        enis: "{{ pan.results | map(attribute='interface.id') | list }}"
    - debug: var=enis

    - name: "Associate new EIPs to PAN Mgmt and VPN ENIs"
      community.aws.ec2_eip:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        device_id: "{{ item }}"
        region: "us-east-1"
        in_vpc: true
        release_on_disassociation: true
      register: eip
      loop: "{{ enis[:-1] }}"  # Slice captures all interfaces except the last
    - debug: var=eip

    - name: "Deploy PAN NGFW EC2 instance"
      amazon.aws.ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        image: "ami-04d797af2d3326de3"
        region: "us-east-1"
        instance_type: "m5.large"
        instance_tags:
          Name: "EC2_PAN_FW1"
        exact_count: 1  # needed for idempotence
        count_tag:
          Name: "EC2_PAN_FW1"
        network_interfaces: "{{ enis }}"
        volumes:
          - device_name: "/dev/xvda"
            volume_type: "gp2"
            volume_size: 60
            delete_on_termination: true
        wait: true
        wait_timeout: 60
        key_name: "EC2-key-pair"
      register: ec2
    - debug: var=ec2

    - name: "Add new EC2 instance to Ansible inventory"
      add_host:
        name: "PA-VM1"
        groups: "pa_aws"
        ansible_host: "{{ ec2.tagged_instances[0].public_ip }}"

- name: "Configure newly-launched PAN NGFW"
  hosts: "pa_aws"
  connection: "local"
  vars_files:
    - "vault.yml"
  tasks:
    - name: "Define PAN NGFW credentials"
      set_fact:
        pan_creds:
          username: "{{ pan_username }}"
          password: "{{ pan_password }}"
          ip_address: "{{ ansible_host }}"
    - debug: var=pan_creds

    # PAN Collection documentation
    # https://paloaltonetworks.github.io/pan-os-ansible/
    - name: "Update PAN NGFW admin password"
      paloaltonetworks.panos.panos_admpwd:
        ip_address: "{{ ansible_host }}"
        key_filename: "/home/centos/personalprivkey.pem"  # FQFN needed
        username: "{{ pan_creds.username }}"
        newpassword: "{{ pan_creds.password }}"
      register: "admin_pass"
      until:
        - "admin_pass.stdout is defined"
        - "'Configuration committed successfully' in admin_pass.stdout"
      retries: 40
      delay: 30  # 30 * 40 = 1200 seconds = 20 minutes total
    - debug: var=admin_pass

    - name: "Wait for PA NGFW REST API to respond"
      paloaltonetworks.panos.panos_check:
        provider: "{{ pan_creds }}"
        interval: 5
        timeout: 60
      register: pan_check
    - debug: var=pan_check

    - name: "Configure VPN underlay interface and zone"
      paloaltonetworks.panos.panos_interface:
        provider: "{{ pan_creds }}"
        if_name: "ethernet1/1"
        comment: "VPN underlay"
        zone_name: "vpn"
        create_default_route: true
        enable_dhcp: true
      register: pan_check
    - debug: var=pan_check

    - name: "Configure server interface and zone"
      paloaltonetworks.panos.panos_interface:
        provider: "{{ pan_creds }}"
        if_name: "ethernet1/2"
        comment: "Servers"
        zone_name: "servers"
        create_default_route: false
        enable_dhcp: true
      register: pan_check
    - debug: var=pan_check

    - name: "Configure IKE gateway"
      paloaltonetworks.panos.panos_ike_gateway:
        provider: "{{ pan_creds }}"
        name: "IKE_GW_GloboHQ"
        version: "ikev2"
        interface: "ethernet1/1"
        peer_ip_type: "dynamic"
        peer_id_type: "fqdn"
        peer_id_value: "r1.globomantics.com"
        pre_shared_key: "globoPass123!"
        ikev2_crypto_profile: "Suite-B-GCM-256"  # built-in
        liveness_check_interval: 5
        enable_passive_mode: true
        enable_liveness_check: true
        enable_nat_traversal: true
      register: pan_check
    - debug: var=pan_check

    - name: "Configure IPsec tunnel interface"
      paloaltonetworks.panos.panos_tunnel:
        provider: "{{ pan_creds }}"
        if_name: "tunnel.100"
        zone_name: "globo"
        vr_name: "default"
        ip: ["192.0.2.1/24"]
        comment: "IPsec tunnel to Globomantics HQ"
      register: pan_check
    - debug: var=pan_check

    - name: "Configure IPsec tunnel parameters"
      paloaltonetworks.panos.panos_ipsec_tunnel:
        provider: "{{ pan_creds }}"
        name: "IPsec_Tunnel_GloboHQ"
        tunnel_interface: "tunnel.100"
        ak_ike_gateway: "IKE_GW_GloboHQ"
        ak_ipsec_crypto_profile: "Suite-B-GCM-256"  # built-in
      register: pan_check
    - debug: var=pan_check

    - name: "Configure static route to GloboHQ"
      paloaltonetworks.panos.panos_static_route:
        provider: "{{ pan_creds }}"
        name: "To_GloboHQ"
        destination: "192.168.0.0/16"
        nexthop_type: "none"
        interface: "tunnel.100"
      register: pan_check
    - debug: var=pan_check

    - name: "Permit HTTP from GloboHQ to cloud servers"
      paloaltonetworks.panos.panos_security_rule:
        provider: "{{ pan_creds }}"
        rule_name: "Eng_HTTP"
        description: "Globo engineering to web server"
        source_zone: ["globo"]
        source_ip: ["198.51.100.0/24"]
        destination_zone: ["servers"]
        service: ["service-http"]  # built-in service for TCP 80 and 8080
        location: "top"
        action: "allow"
      register: pan_check
    - debug: var=pan_check

    - name: "Commit changes"
      paloaltonetworks.panos.panos_commit_firewall:
        provider: "{{ pan_creds }}"
        description: "Ansible initial provisioning complete"
      register: pan_check
    - debug: var=pan_check
